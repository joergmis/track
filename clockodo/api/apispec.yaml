openapi: 3.1.0
info:
  title: Clockodo API v2
  description: |-
    Clockodo spec, retraced from their online API documentation. Beware, this might very well include errors or simply be incomplete!
  version: 0.0.1
externalDocs:
  description: Check out the source code
  url: https://github.com/joergmis/track
servers:
  - url: https://my.clockodo.com/api
tags:
  - name: customers
  - name: projects
  - name: entries
  - name: services
  - name: users
paths:
  /v2/services:
    get:
      tags:
        - services
      summary: >
        Get all services. It looks like they are not project-specifc and not 
        tied to one specifically.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Services'
  /v2/users:
    get:
      tags:
        - users
      summary: Get all users
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
  /v2/customers:
    get:
      tags:
        - customers
      summary: List all customers
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customers'
  /v2/projects:
    get:
      tags:
        - projects
      summary: List all projects
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projects'
  /v2/entries:
    post:
      tags:
        - entries
      summary: Add a time entry
      parameters:
        - in: query
          name: customers_id
          schema:
            type: integer
          required: true
        - in: query
          name: services_id
          schema:
            type: integer
          required: true
        - in: query
          name: billable
          schema:
            type: integer
            description: 0 = not billable, 1 = billable, 2 = already billed
            enum:
              - 0
              - 1
              - 2
          required: true
        - in: query
          name: time_since
          schema:
            type: string
            format: ISO 8601 UTC, e.g. "2021-06-30T12:34:56Z
          required: true
        - in: query
          name: time_until
          schema:
            type: string
            format: ISO 8601 UTC, e.g. "2021-06-30T12:34:56Z
          required: true
        - in: query
          name: users_id
          schema:
            type: integer
          required: true
        - in: query
          name: projects_id
          schema:
            type: integer
          required: true
        - in: query
          name: text
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entry'
    get:
      tags:
        - entries
      summary: >
        Get entries in timeframe. Example call (note the structure of the filter query):
        https://my.clockodo.com/api/v2/entries?time_since=2024-03-24T23:00:00Z&time_until=2024-03-31T21:59:59Z&filter[users_id]=286820&page=1
      parameters:
        - in: query
          name: time_since
          schema:
            type: string
            format: ISO 8601 UTC, e.g. "2021-06-30T12:34:56Z
          required: true
          description: Start time of interval to return time entries from
        - in: query
          name: time_until
          schema:
            type: string
            format: ISO 8601 UTC, e.g. "2021-06-30T12:34:56Z
          required: true
          description: End time of interval to return time entries from
        - in: query
          name: filter
          schema:
            $ref: '#/components/schemas/EntriesFilter'
          required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entries'
  /v2/entriesTexts:
    get:
      tags:
        - entries
      summary: Get descriptions of time entries
      parameters:
        - in: query
          name: text
          schema:
            type: string
          required: true
          description: Text to search for
        - in: query
          name: filter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntriesTextsFilter'
          required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntriesTexts'
  /v2/workTimes:
    get:
      tags:
        - entries
      summary: Get descriptions of time entries
      parameters:
        - in: query
          name: date_since
          schema:
            type: string
          required: true
        - in: query
          name: date_until
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkTimeDays'
components:
  schemas:
    Pagination:
      type: object
      required:
        - items_per_page
        - current_page
        - count_pages
        - count_items
      properties:
        items_per_page:
          type: integer
        current_page:
          type: integer
        count_pages:
          type: integer
        count_items:
          type: integer
    Service:
      type: object
      required:
        - id
        - name
        - active
      properties:
        id:
          type: integer
        name:
          type: string
        active:
          type: boolean
    Services:
      type: object
      required:
        - services
      properties:
        services:
          type: array
          items:
            $ref: '#/components/schemas/Service'
    Project:
      type: object
      required:
        - id
        - customers_id
        - name
        - number
        - active
        - billable_default
        - deadline
        - completed
      properties:
        id:
          type: integer
        customers_id:
          type: integer
        name:
          type: string
        number:
          type: string
        active:
          type: boolean
        billable_default:
          type: boolean
        deadline:
          type: string
        completed:
          type: boolean
    Projects:
      type: object
      required:
        - paging
        - projects
      properties:
        paging:
          $ref: '#/components/schemas/Pagination'
        projects:
          type: array
          items:
            $ref: '#/components/schemas/Project'
    Customer:
      type: object
      required:
        - id
        - name
        - active
        - billable_default
        - note
        - color
      properties:
        id: 
          type: integer
        name:
          type: string
        active:
          type: boolean
        billable_default:
          type: boolean
        note:
          type: string
        color:
          type: integer
    Customers:
      type: object
      required:
        - paging
        - customers
      properties:
        paging:
          $ref: '#/components/schemas/Pagination'
        customers:
          type: array
          items:
            $ref: '#/components/schemas/Customer'
    EntriesFilter:
      type: object
      required:
        - users_id
      properties:
        users_id:
          type: integer
    EntriesTextsFilter:
      type: object
      required:
        - users_id
        - time_since
        - time_until
      properties:
        users_id:
          type: integer
        time_since:
          type: string
        time_until:
          type: string
    Entry:
      type: object
      required:
        - id
        - customers_id
        - projects_id
        - users_id
        - text
        - billable
        - texts_id
        - time_since
        - time_until
      properties:
        id:
          type: integer
        customers_id:
          type: integer
        projects_id:
          type: integer
        users_id:
          type: integer
        text:
          type: string
        billable:
          type: integer
        texts_id:
          type: integer
        time_since:
          type: string
          format: ISO 8601 UTC, e.g. "2021-06-30T12:34:56Z
        time_until:
          type: string
          format: ISO 8601 UTC, e.g. "2021-06-30T12:34:56Z
    Entries:
      type: object
      required:
        - paging
        - entries
      properties:
        paging:
          $ref: '#/components/schemas/Pagination'
        entries:
          type: array
          items:
            $ref: '#/components/schemas/Entry'
    EntriesTexts:
      type: object
      required:
        - paging
        - texts
      properties:
        paging:
          $ref: '#/components/schemas/Pagination'
        texts:
          type: object
          patternProperties:
            '(\d+)':
              type: string
    WorkTimeInterval:
      type: object
      required:
        - time_since
        - time_until
      properties:
        time_since:
          type: string
        time_until:
          type: string
    WorkTimeDay:
      type: object
      required:
        - date
        - users_id
        - offset
        - intervals
      properties:
        date:
          type: string
        users_id:
          type: integer
        offset:
          type: integer
        intervals:
          type: array
          items:
            $ref: '#/components/schemas/WorkTimeInterval'
    WorkTimeDays:
      type: object
      required:
        - paging
        - work_time_days
      properties:
        paging:
          $ref: '#/components/schemas/Pagination'
        work_time_days:
          type: array 
          items:
            $ref: '#/components/schemas/WorkTimeDay'
    User:
      type: object
      required:
        - id
        - name
        - email
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
    Users:
      type: object
      required:
        - users
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
  securitySchemes:
    api_key_auth:
      type: apiKey
      in: header
      name: X-ClockodoApiKey
    api_user_auth:
      type: apiKey
      in: header
      name: X-ClockodoApiUser
security:
  - api_user_auth: []
  - api_key_auth: []
